name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          title: $version
          token: ${{ secrets.GITHUB_TOKEN }}

  upload-assets:
    name: ${{ matrix.target }}
    needs:
      - create-release
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
          - target: aarch64-apple-darwin
            os: macos-11
          - target: x86_64-apple-darwin
            os: macos-11

    # The type of runner that the job will run on
    # Runs on Ubuntu if other os is not specified above
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    timeout-minutes: 90
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly

      - name: create version file
        run: echo "${{github.ref_name}}" | tail -c+2  >> .build_version
      - name: frontend install
        run: yarn install
        working-directory: ./frontend

      - name: frontend build
        run: yarn run build
        working-directory: ./frontend

      # Build and upload the binary to the new release
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: zhang
          target: ${{ matrix.target }}
          tar: all
          features: 'frontend'
          token: ${{ secrets.GITHUB_TOKEN }}

  docker-image-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: create version file
        run: echo "${{github.ref_name}}" | tail -c+2  >> .build_version
      - name: frontend install
        run: yarn install
        working-directory: ./frontend

      - name: frontend build
        run: yarn run build
        working-directory: ./frontend

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            kilerd/zhang
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
