name: Develop Build

on:
  push:
    branches:
      - main
      - develop
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  frontend-style-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: frontend install
        run: yarn install
        working-directory: ./frontend
      - name: frontend style check
        run: yarn run prettier:check
        working-directory: ./frontend
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: frontend install
        run: yarn install
        working-directory: ./frontend
      - name: frontend build
        run: yarn run build
        working-directory: ./frontend
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        rust: [stable]
    steps:
      - uses: actions/checkout@v4
      - name: Install ${{ matrix.rust }}
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Run test
        run: cargo test --all-features
  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.22.0'
          args: '--all-features --workspace --ignore-tests --out Lcov'
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v4
      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: cobertura.xml
  formatter:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Format
        run: cargo fmt --all -- --check
  clippy-check:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: clippy
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Clippy
        run: cargo clippy --all-features --all-targets -- -D warnings -A clippy::empty_docs
