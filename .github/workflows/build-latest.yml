name: Develop Build

on:
  push:
    branches:
      - main
      - develop
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  frontend-style-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: frontend install
        run: yarn install
        working-directory: ./frontend
      - name: frontend style check
        run: yarn run prettier:check
        working-directory: ./frontend
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: frontend install
        run: yarn install
        working-directory: ./frontend
      - name: frontend build
        run: yarn run build
        working-directory: ./frontend
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Run test
        run: cargo test --all-features
  coverage:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          version: '0.22.0'
          args: '--all-features --workspace --ignore-tests --out Lcov'
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
      - name: Archive code coverage results
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage-report
          path: cobertura.xml
  formatter:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Format
        run: cargo fmt --all -- --check
  clippy-check:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v1
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: fake frontend build
        run: mkdir -p build
        working-directory: ./frontend
      - name: Clippy
        run: cargo clippy --all-features --all-targets -- -D warnings